server:
  port: 2000


mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl #开启SQL语句打印

spring:
  web:
    resources:
      static-locations: [classpath:/static/,classpath:/public,classpath:/resources ]
  mvc:
    path match:
      matching-strategy: ant_path_matcher
    #session 存储方式
  session:
    store-type: redis #将session保存到redis中
  #  data:
  #    mongodb:
  #      host: 127.0.0.1
  #      port: 27017
  #      database: test
  # nacos 配置
  application:
    name: reschat # resorder 是此服务注册到host上的服务名
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848

  redis:
    #默认第0号数据库
    database: 0  #redis默认0-15号库
    host: 127.0.0.1  #使用docker后还需加上用户名和密码，且redis中配置访问的主机的ip，以提高安全性
    port: 6379
    #    username: root
    #    password: a
    lettuce:
      pool:
        #最大空闲连接数
        max-idle: 10
        #最小空闲连接数
        min-idle: 0
        #最大活动连接数
        max-active: 10
        #最大等待时间
        max-wait: -1ms
    #建立连接的超时时间
    timeout: 5000
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/res?severTimezone=UTC
    username: root
    password: 1234
    type: com.alibaba.druid.pool.DruidDataSource

    druid:
      # 初始化时建立物理连接的个数
      initial-size: 5
      # 连接池的最小空闲数量
      min-idle: 5
      # 连接池最大连接数量
      max-active: 20
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 既作为检测的间隔时间又作为testWhileIdel执行的依据
      time-between-eviction-runs-millis: 60000
      # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接(配置连接在池中的最小生存时间)
      min-evictable-idle-time-millis: 30000
      # 用来检测数据库连接是否有效的sql 必须是一个查询语句(oracle中为 select 1 from dual)
      validation-query: select 'x'
      # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存preparedStatement, 也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
      pool-prepared-statements: false
      # 置监控统计拦截的filters，去掉后监控界面sql无法统计，stat: 监控统计、Slf4j:日志记录、waLL: 防御sqL注入
      filters: stat,wall,slf4j
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: -1
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      web-stat-filter:
        # 是否启用StatFilter默认值true
        enabled: true
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤的格式
        exclusions: /druid/*,*.js,*.gif,*.jpg,*.png,*.css,*.ico
      stat-view-servlet:
        # 是否启用StatViewServlet默认值true
        enabled: true
        # 访问路径为/druid时，跳转到StatViewServlet
        url-pattern: /druid/*
        # 是否能够重置数据
        reset-enable: false
        # 需要账号密码才能访问控制台，默认为root
        login-username: druid
        login-password: druid
        # IP白名单
        allow: 127.0.0.1            #上线后请将密码设置 复杂，且允许远程访问
        # IP黑名单（共同存在时，deny优先于allow）
        deny:
